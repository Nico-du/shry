<?xml version="1.0" encoding="utf-8"?>
<mx:ComboBox xmlns:mx="http://www.adobe.com/2006/mxml" dataProvider="{dataArray}" labelField="label" preinitialize="initCombox()" fontSize="12">
	<mx:RemoteObject id="CodeListRmt" destination="codeListService" endpoint="/mxAsset/messagebroker/amf" showBusyCursor="true"/>
	<mx:Script>
		<![CDATA[
			import cn.cnsasfram.helper.ASStringHelper;
			
			import com.adobe.serialization.json.JSON;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.rpc.events.ResultEvent;
			//数据源
			[Bindable]
			public var dataArray:ArrayCollection=null;
			
			//是否允许为空
			public var isnullable:Boolean=true;
			
			//类型名称
			public var typename:String="DMB";
			
			//初始化页面之后调用
			public function initCombox():void{
				if(true){
					beforeInitCombox();
				}
				if(true){
					afterInitCombox();
				}
			}
			//初始化页面之前调用
			protected function beforeInitCombox():void{
			}
			//初始化页面之后调用
			protected function afterInitCombox():void{
				this.getCodeList();
			}
			
			//加载CODELIST
			protected function getCodeList():void{
				
				if(ASStringHelper.isNullOrEmpty(typename)){
					return;
				}
				CodeListRmt.GetCodeListByType(typename);
				CodeListRmt.addEventListener(ResultEvent.RESULT,getCodeListBack);
			}
			//加载CODELIST回调方法
			protected function getCodeListBack(rmtResult:ResultEvent):void{
				CodeListRmt.removeEventListener(ResultEvent.RESULT,getCodeListBack);
				var objResult:Object=rmtResult.result;
				if(objResult==null){
					return;
				}
				var strresult:String=objResult.toString();
				var jsonObj:Object=JSON.decode(strresult,true);
				this.dataArray=new ArrayCollection(jsonObj as Array);
				if(this.dataArray.length>0 && isnullable){
					var tempobject:Object=new Object();
					tempobject.label="-";
					tempobject.value="-";
					this.dataArray.addItemAt(tempobject,0);
				}
				this.selectedIndex=0;
				resetCurrentValue();
				if(!isSetTextOver){
					setText(defaultText);
					isSetTextOver = true;
					defaultText = null;
				}
			}
			
			//得到选中文本
			public function getText():String{
				if(this.selectedIndex==0 && isnullable){
					return "";
				}
				return this.selectedLabel;
			}
			//在初始化数据结束后在设值
			private var isSetTextOver:Boolean = true;
			private var defaultText:String = null;
			//设置选中文本
			public function setText(strText:String):void{
				if(ASStringHelper.isNullOrEmpty(typename)){
					if(this.dataProvider != null && dataArray==null){
						this.dataArray = this.dataProvider as ArrayCollection;
					}
				}
			//	if(ASStringHelper.isNullOrEmpty(strText)){this.selectedIndex=0; return; }
				if(this.dataArray ==null || this.dataArray.length<1){
					isSetTextOver = false;
					defaultText = strText;
					return;
				}
				for(var i:int;i<this.dataArray.length;i++){
					var tempObject:Object=dataArray.getItemAt(i);
					if(ASStringHelper.stringCompare(tempObject.label,strText,true)==0){
						this.selectedIndex=i;
						return;
					}
				}
				this.selectedIndex=0;
			}
			
			//得到选中文本值
			public function getValue():String{
				if(this.selectedIndex==0 && isnullable){
					return "";
				}
				var tempObject:Object=this.selectedItem;
				if(tempObject!=null){
					return tempObject.value;
				}
				return "";
			}
			
			private function resetCurrentValue():void{
				if(ASStringHelper.isNullOrEmpty(currentValue) || this.dataArray ==null || this.dataArray.length<1){
				this.selectedIndex=0;
				return;
				}
				
				for(var i:int;i<this.dataArray.length;i++){
					var tempObject:Object=dataArray.getItemAt(i);
					if(ASStringHelper.stringCompare(tempObject.value,currentValue,true)==0){
						this.selectedIndex=i;
						return;
					}
				}
			}
			
			private var currentValue:String = "";
			//设置选中文本值
			public function setValue(strValue:String):void{
				if(!ASStringHelper.isNullOrEmpty(strValue)){currentValue = strValue;}
				if(ASStringHelper.isNullOrEmpty(strValue) || this.dataArray ==null || this.dataArray.length<1){
				this.selectedIndex=0;
				return;
				}
				for(var i:int;i<this.dataArray.length;i++){
					var tempObject:Object=dataArray.getItemAt(i);
					if(ASStringHelper.stringCompare(tempObject.value,currentValue,true)==0){
						this.selectedIndex=i;
						return;
					}
				}
			}
		]]>
	</mx:Script>
</mx:ComboBox>
