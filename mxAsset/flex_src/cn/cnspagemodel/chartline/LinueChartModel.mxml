<?xml version="1.0" encoding="utf-8"?>
<!--固定资产废弃情况,展示近10年-->
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" initialize="initPage()"
		   width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" fontSize="12">
	<mx:RemoteObject id="ChartService" destination="chartService" endpoint="/mxAsset/messagebroker/amf" showBusyCursor="true"/>
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.graphics.SolidColorStroke;
			import mx.rpc.events.ResultEvent;

			[Bindable]
			protected var strokeffect:SolidColorStroke=null;
			
			
			public var modelTitle:String = "模块标题";
			/**
			 * 垂直虚线是否可见
			 * */
			public var xdashLineVisible:Boolean = false;
			public var serialLineName:String = "曲线名";
			public var _xField:String = "ll";
			public var _yField:String = "xl";
			/**
			 * X轴标题
			 * */
			public var xAxisTitle:String = "X轴标题";
			public var xToolTipTiltle:String = "X ToolTip";
			/**
			 * Y轴标题
			 * */
			public var yAxisTitle:String = "Y轴标题";
			public var yToolTipTiltle:String = "Y ToolTip";
			public var legendVisible:Boolean = false;
			/**
			 *X 坐标轴的最大值 
			 **/
			[Bindable]
			private var _xMaximum:int = 0;
			/**
			 * Y坐标轴的最大值 
			 **/
			[Bindable]
			private var _yMaximum:int = 0;
			/**
			 *minorInterval:y轴线条的间隔  interval:y轴数值的间隔 
			 **/
			[Bindable]
			private var _yMinorInterval:Number = NaN;
			[Bindable]
			private var _yInterval:Number = NaN;
			/**
			 *曲线数据源 
			 **/
			[Bindable]
			protected var dpArray:ArrayCollection = new ArrayCollection([  
				{ll:0.0   ,jy:374.3 ,zzs:2796 ,dy:15.2 ,dl:36.8 ,srgl:559.4 ,xl:0.00  },
				{ll:309.2 ,jy:279.6 ,zzs:2796 ,dy:13.8 ,dl:27.4 ,srgl:378.1 ,xl:6.35  },
				{ll:692.8 ,jy:230.7 ,zzs:2796 ,dy:13.1 ,dl:22.8 ,srgl:298.7 ,xl:14.86 },
				{ll:1365.0,jy:199.5 ,zzs:2795 ,dy:12.8 ,dl:20.4 ,srgl:261.1 ,xl:28.97 },
				{ll:1505.3,jy:180.3 ,zzs:2795 ,dy:12.7 ,dl:19.5 ,srgl:247.7 ,xl:30.44 },
				
				{ll:1634.7,jy:150.2 ,zzs:2794 ,dy:12.4 ,dl:18.0 ,srgl:223.2 ,xl:30.56 },
				{ll:1829.6,jy:119.8 ,zzs:2798 ,dy:12.3 ,dl:17.0 ,srgl:209.1 ,xl:29.12 },
				{ll:1949.1,jy:100.3 ,zzs:2795 ,dy:12.2 ,dl:16.3 ,srgl:198.9 ,xl:27.31 },
				{ll:2284.0,jy:51.1  ,zzs:2795 ,dy:11.9 ,dl:14.7 ,srgl:174.9 ,xl:18.53 },
				{ll:2603.2,jy:0.6   ,zzs:2797 ,dy:11.7 ,dl:13.1 ,srgl:153.3 ,xl:0.28  },
			]);
			
			//初始化页面
			public function initPage():void{
				if(false){
					beforeInitPage();
				}
				this.initPageStyle();
			}
			
			/**
			 *初始化页面样式 
			 **/
			private function initPageStyle():void{
				this.calculateAxisData();	
			}
			
			/**
			 *计算坐标轴的相关数据 以设置样式 
			 **/
			private function calculateAxisData():void{
				//计算X Y坐标轴最大值
				if(dpArray != null && dpArray.length > 0){
					var maxYValue:Number = 0; 				 var maxXValue:Number = 0;
					var eachXDataValue:String = "";   var eachYDataValue:String = "";
					for(var idx:int=0; idx<dpArray.length; idx++ ){
						eachXDataValue = 	dpArray.getItemAt(idx)[_xField];
						eachYDataValue = 	dpArray.getItemAt(idx)[_yField];
						
						if( eachXDataValue != null && eachXDataValue != undefined &&  eachXDataValue != ""
							&& Number(eachXDataValue) > maxXValue){
							maxXValue =  Number(eachXDataValue);
							}
						if( eachYDataValue != null && eachYDataValue != undefined &&  eachYDataValue != ""
							&& Number(eachYDataValue) > maxYValue){
							maxYValue =  Number(eachYDataValue);
						}
				   }
					
					var vLength:int = (Math.floor(maxXValue) + "").length;
					_xMaximum = Math.ceil( maxXValue/Math.pow(10,vLength-1) ) *  Math.pow(10,vLength-1);
					
					vLength = (Math.floor(maxYValue) + "").length;
					_yMaximum = Math.ceil( maxYValue/Math.pow(10,vLength-1) ) *  Math.pow(10,vLength-1);
					
					if(_yMaximum / (Math.pow(10,vLength-2) * 5) > 4  &&  _yMaximum / (Math.pow(10,vLength-2) * 5)  < 17 ){
					_yMinorInterval = Math.pow(10,vLength-2);
					_yInterval = _yMinorInterval * 5;
					}
					
				}
			}
			
			//初始化页面之前调用
			public function beforeInitPage():void{
				strokeffect=new SolidColorStroke();
				strokeffect.color=0xFFFFFF;
				strokeffect.weight=1;
				
				ChartService.getXXSBInfo();
				ChartService.addEventListener(ResultEvent.RESULT,resultBack);
			}
			private function resultBack(event:ResultEvent):void {
				ChartService.removeEventListener(ResultEvent.RESULT,resultBack);
				if(event.result == null)return;
				var objList:ArrayCollection = event.result as ArrayCollection;
				var objCell:Object;
				dpArray.removeAll();
				for(var i:int=0;i<objList.length;i++){
					objCell = objList.getItemAt(i);
					var arrItem:Object = new Object();
					arrItem.year = objCell[0];
					arrItem.buycount = objCell[1];
					dpArray.addItem(arrItem);
				}
			}
			
			//初始化页面之后调用
			public function afterInitPage():void{
				
			}
		]]>
	</mx:Script>
	
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:SeriesInterpolate id="effect" duration="1000" />
		<mx:SolidColorStroke id = "s3"  color="green" weight="1" />
		<mx:Stroke id="stokedft" color="black" weight="0" alpha="0.2" />
	
	<mx:VBox width="100%" height="100%" borderStyle="solid" borderColor="#99CCFF" horizontalAlign="center" horizontalGap="0" verticalAlign="middle" verticalGap="0">
		<mx:HBox width="100%" height="20" borderStyle="none" backgroundColor="#99CCFF" horizontalAlign="left" horizontalGap="0" verticalAlign="middle" verticalGap="0">
			<mx:Label text="{modelTitle}" textIndent="10" width="100%" height="20" fontWeight="bold" fontSize="13"/>
		</mx:HBox>
		<mx:HBox width="100%" height="100%" borderStyle="none" horizontalAlign="center" horizontalGap="10" verticalAlign="middle" verticalGap="0">
			<mx:Canvas width="100%" height="100%" borderStyle="none" >
				<mx:LineChart id="gamdiscardlinechart" width="100%" height="100%"  horizontalCenter="0" showDataTips="true"
							  verticalCenter="0" dataProvider="{dpArray}"  seriesFilters="[]" 
							  >
					<mx:backgroundElements>
						<mx:GridLines horizontalStroke="{stokedft}" verticalStroke="{stokedft}" 
									  horizontalChangeCount="1" verticalChangeCount="1" gridDirection="both" />
					</mx:backgroundElements>
					
					<!--	<mx:horizontalAxis> 
					<mx:CategoryAxis categoryField="time" displayName="Time" title="时间" />
					</mx:horizontalAxis>-->
					<mx:horizontalAxis>
						<!--<mx:CategoryAxis  labelFunction="categoryLabelFunction"  categoryField="Amount"/>-->
						<!--   minorInterval="0.04"   interval="0.02"-->
						<mx:LinearAxis  minimum="0" maximum="{_xMaximum}"
									   displayName="{xToolTipTiltle}" title="{xAxisTitle}" 
					                	baseAtZero="false"
								 
									   />
						<!--<mx:CategoryAxis categoryField="{_xField}" baseAtzero
										 displayName="{xToolTipTiltle}" title="{xAxisTitle}" 
										 ticksBetweenLabels="true" />-->
					</mx:horizontalAxis>
					
					<!-- vertical axis ** minorInterval:y轴线条的间隔  interval:y轴数值的间隔,maximum：y轴最大值 , minimum：y轴最小值 -->
					<mx:verticalAxis>
						<!-- minorInterval="0.02" interval="0.04" -->
						<mx:LinearAxis minimum="0" maximum="{_yMaximum}"
									   minorInterval="{_yMinorInterval}" interval="{_yInterval}"
									   displayName="{yToolTipTiltle}" title="{yAxisTitle}" 
									   baseAtZero="false"
									    
									   />
						<!--<mx:CategoryAxis categoryField="{_yField}" 
									   displayName="{yToolTipTiltle}" title="{yAxisTitle}" 
									   ticksBetweenLabels="true" 
									   />-->
					</mx:verticalAxis>
					
					<mx:series>
						<mx:LineSeries id="innerserial"  displayName="{serialLineName}"  lineStroke="{s3}"
									   xField="{_xField}" yField="{_yField}" 
									   itemRenderer="mx.charts.renderers.DiamondItemRenderer"
									   form="curve"/>
					</mx:series>
				</mx:LineChart>
			</mx:Canvas>
			<!--添加图例，也就是说明图形的某个线条的颜色和作用的实例-->
			<mx:Legend dataProvider="{gamdiscardlinechart}" visible="{legendVisible}" includeInLayout="{legendVisible}" width="100" height="100%"  legendItemClass="cn.cnsasfram.utilty.ASLegendItem"/>
		</mx:HBox>
	</mx:VBox>
</mx:Module>
