<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark" initialize="application1_initializeHandler(event)"
			   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:chartClasses="cn.cnsasfram.dashline.*" >
	
	<fx:Script>
		<![CDATA[
			import cn.cnsasfram.dashline.DashedLine;
			
			import mx.charts.CategoryAxis;
			import mx.charts.chartClasses.IAxis;
			import mx.charts.renderers.BoxItemRenderer;
			import mx.charts.renderers.DiamondItemRenderer;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.utils.ObjectProxy;
			
			
			/**
			 * 垂直虚线是否可见
			 * */
			public var xdashLineVisible:Boolean = false;
			/**
			 * X轴标题
			 * */
			public var xAxisTitle:String = "X轴标题";
			public var xToolTipTiltle:String = "X ToolTip";
			/**
			 * Y轴标题
			 * */
			public var yAxisTitle:String = "Y轴标题";
			public var yToolTipTiltle:String = "Y ToolTip";
			/**
			 *曲线数据源 
			 **/
			[Bindable]
			private var dataProviderAC:ArrayCollection;
			
			private var timer:Timer;
			
			var dateFormatter:mx.formatters.DateFormatter=new DateFormatter();//生成格式化对象 
			protected function application1_initializeHandler(event:FlexEvent):void
			{
				dateFormatter.formatString="YYYY-MM-DD JJ:NN:SS";//设定格式 
			//	addDashLine();
			}
			
			protected function changeDashedLine(event:MouseEvent):void
			{
				nx = Math.round((Math.random() ) * 100) * .01;
			}
			
			
			private var isMouseDown:Boolean = false;
			protected function chart_mouseDownHandler(event:MouseEvent):void
			{
				isMouseDown = true;
				var array:Array = 	innerserial.localToData(new Point(event.localX,0));
				moveDashLine(array[0] as Number);
			}
			protected function chart_mouseUpHandler(event:MouseEvent):void
			{
				isMouseDown = false;
				
			}

			protected function chart_mouseOutHandler(event:MouseEvent):void
			{
				isMouseDown = false;
			}

			protected function chart_mouseMoveHandler(event:MouseEvent):void
			{
				if(isMouseDown){
					var array:Array = 	innerserial.localToData(new Point(event.localX,0));
					
					moveDashLine(array[0] as Number);
					//TODO mx.charts.series.LineSeries 自带值转坐标 和 坐标转值 方法
			//	var array:Array = 	innerserial.localToData(new Point(event.localX,event.localY));
			//	var point:Point = innerserial.dataToLocal(0.4,0.4);
					//如何取得 innerserial.X值 对应的Y值 ？???
				//Finds the closest data point represented by the element under the given coordinates.
				//	findDataPoints(x:Number, y:Number, sensitivity2:Number):Array
				//Returns the y coordinate of the element's bounds at the specified element size.
				/* var curY:Number =	innerserial.getBoundsXAtSize(300,300,true);
				Alert.show("curY = "+curY);	 */	
					
					
					/* var array:Array = innerserial.findDataPoints(0.5,0,300);
					Alert.show(array[0].x+" ------  "+array[0].y);
					var ar2:Array = innerserial.localToData(new Point(array[0].x,array[0].y));
					Alert.show(ar2[0]+" ---  "+ar2[1]); */
					
				}
			}
			private function  moveDashLine(curXValue:Number):void{
				if(curXValue < 0 || curXValue == undefined){return;}
				innerDashedLine.xValue = curXValue;
			}
			
			
			var xAxisLabelsCount:int = 0;
			private function categoryLabelFunction(labelValue:Object, previousValue:Object, axis:IAxis):Object
			        {
				return "";
				            var label:Object = "";
				if((Number(labelValue) % 0.2 )== 0){
				         //    if( (xAxisLabelsCount% 5)  == 0){
								                label = labelValue;//categoryItem["Amount"];
							            // 设置字体大小
							         //   return '<font size="'+xFontSize+'">' + label + '</font>';
							            // 在这里判断，间隔，是不是，那就是 labe % 5 == 0 ，这样就显示呗。
							          }
		//		mx.charts.renderers.DiamondItemRenderer
				//		xAxisLabelsCount = xAxisLabelsCount + 1;
				            return label;
			        }
			
			[Bindable]
			private var expensesAC:ArrayCollection = new ArrayCollection( [
			
				 /* { Month: "Jan", Profit: 2000  , Amount: 0.04 },
				{ Month: "Jan", Profit: 2000  , Amount: 0.08 },
				{ Month: "Jan", Profit: 2000, Amount: 0.12 },
				{ Month: "Jan", Profit: 2000, Amount: 0.16 },  */
				{ Month: "Jan", Profit: 2000, Expenses: 0.15, Amount: 0.2 },
				{ Month: "Feb", Profit: 1000, Expenses: 0.33, Amount: 0.4 },
				{ Month: "Mar", Profit: 1500, Expenses: 0.82, Amount: 0.6 },
				{ Month: "Apr", Profit: 1800, Expenses: 0.78, Amount: 0.8 },
				{ Month: "May", Profit: 2400, Expenses: 0.57, Amount: 1 } ]);
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:SeriesInterpolate id="effect" duration="1000" />
		<mx:SolidColorStroke id = "s3"  color="green" weight="1" />
		<mx:Stroke id="stokedft" color="black" weight="0" alpha="0.2" />
		<fx:Number id="nx">0.3</fx:Number>
		<fx:Number id="ny">4</fx:Number>
	</fx:Declarations>
	
	<s:Panel width="600" height="500" title="测试实时曲线">
		<s:controlBarContent>
			<s:HGroup width="100%" height="20" horizontalAlign="center" verticalAlign="middle">
				<s:Button label="change dashed line" click="changeDashedLine(event)"/>
			</s:HGroup>
		</s:controlBarContent>
		<mx:LineChart id="chart" width="500" height="400" horizontalCenter="0" showDataTips="true"
					  verticalCenter="0" dataProvider="{expensesAC}"  seriesFilters="[]"
					  mouseOut="chart_mouseOutHandler(event)" 
					  mouseDown="chart_mouseDownHandler(event)" mouseUp="chart_mouseUpHandler(event)" 
					  mouseMove="chart_mouseMoveHandler(event)"
					  >
			<mx:backgroundElements>
				<mx:GridLines horizontalStroke="{stokedft}" verticalStroke="{stokedft}" 
							  horizontalChangeCount="1" verticalChangeCount="1" gridDirection="both" />
				<chartClasses:DashedLine id="innerDashedLine" xLineVisible="{xdashLineVisible}"  xValue="{nx}"/> 
			</mx:backgroundElements>
			 
		<!--	<mx:horizontalAxis> 
				<mx:CategoryAxis categoryField="time" displayName="Time" title="时间" />
			</mx:horizontalAxis>-->
			<mx:horizontalAxis>
				<!--<mx:CategoryAxis  labelFunction="categoryLabelFunction"  categoryField="Amount"/>-->
				<mx:LinearAxis id="hlinerAxis" minimum="0" maximum="1.2" 
							   displayName="{xToolTipTiltle}" title="{xAxisTitle}" 
							   minorInterval="0.04"   interval="0.02" 
							   labelFunction="categoryLabelFunction"
							   />
			</mx:horizontalAxis>
			
			<!-- vertical axis ** minorInterval:y轴线条的间隔  interval:y轴数值的间隔,maximum：y轴最大值 , minimum：y轴最小值 -->
			<mx:verticalAxis>
				<mx:LinearAxis minimum="0" maximum="1"
							   displayName="{yToolTipTiltle}" title="{yAxisTitle}" 
							   minorInterval="0.02" 
							   interval="0.04" 
							   />
			</mx:verticalAxis>
			
			<mx:series>
				<mx:LineSeries id="innerserial"  displayName="瓦斯"  lineStroke="{s3}"
							   xField="Amount" yField="Expenses" 
							   itemRenderer="mx.charts.renderers.DiamondItemRenderer"
							   form="curve"/>
			</mx:series>
		</mx:LineChart>
		
	</s:Panel>
</s:Application>
